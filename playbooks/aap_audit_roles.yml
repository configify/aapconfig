---
- name: ROLES - Audit AAP roles
  hosts: localhost
  gather_facts: false

  tasks:
    - name: ROLES - Determine AAP version
      ansible.builtin.set_fact:
        controller_ping: "{{ lookup('ansible.controller.controller_api', 'ping') }}"
      when: >
            controller_ping is not defined and
            aap_platform | default('aap') != 'awx24'

    - name: ROLES - Audit roles (pre 2.5)
      when: >
            (controller_ping is defined and
             controller_ping.version is version_compare('4.6', '<')) or
            aap_platform | default('aap') == 'awx24'
      block:
        - name: ROLES - Get team roles (pre 2.5)
          ansible.builtin.set_fact:
            controller_objects_team_roles: "{{ controller_objects_team_roles | default([]) +
                                               [{'team': item.name,
                                                 'roles': lookup('ansible.controller.controller_api',
                                                                 'teams/' +
                                                                    item.id | string +
                                                                    '/roles/',
                                                                 return_objects=false,
                                                                 return_all=true).results}] }}"
          loop: "{{ lookup('ansible.controller.controller_api', 'teams/', return_objects=false, return_all=true).results }}"
          loop_control:
            label: " | team: {{ item.name }}"

        - name: ROLES - Build list with team roles (pre 2.5)
          ansible.builtin.set_fact:
            controller_objects_roles: "{{ controller_objects_roles | default([]) +
                                          [{'team': item.0.team,
                                            'role': item.1.summary_fields.resource_type_display_name | replace(' ', '') + ' ' + item.1.name,
                                            'object_type': object_type,
                                            'object_name': item.1.summary_fields.resource_name} |
                                            regex_replace('\n', '')] }}"
          loop: "{{ controller_objects_team_roles | default([]) | subelements('roles') }}"
          loop_control:
            label: " | team: {{ item.0.team }} ->
                       role: {{ item.1.name }} ->
                       {{ object_type }}: {{ item.1.summary_fields.resource_name }}"
          when: not format_for_25 | default(false)
          vars:
            object_type: "{{ item.1.summary_fields.resource_type | replace('_', '') }}"

        - name: ROLES - Build list with team roles (pre 2.5 in 2.5 format)
          ansible.builtin.set_fact:
            controller_objects_roles: "{{ controller_objects_roles | default([]) +
                                          [{'team': item.0.team,
                                            'role': (item.1.summary_fields.resource_type_display_name | replace(' ', '') + ' ' + item.1.name) |
                                                     replace('Job Template', 'JobTemplate') |
                                                     replace('Auditor', 'Audit') |
                                                     replace('Organization Approve', 'Organization Approval') |
                                                     replace('Execution Environment', 'ExecutionEnvironment') |
                                                     replace('Ad Hoc', 'Adhoc') |
                                                     replace('Workflow Admin', 'WorkflowJobTemplate Admin') |
                                                     replace('Notification Admin', 'NotificationTemplate Admin'),
                                            'object_type': object_type,
                                            'object_name': item.1.summary_fields.resource_name} |
                                            regex_replace('\n', '')] }}"
          loop: "{{ controller_objects_team_roles | default([]) | subelements('roles') }}"
          loop_control:
            label: " | team: {{ item.0.team }} ->
                       role: {{ item.1.name }} ->
                       {{ object_type }}: {{ item.1.summary_fields.resource_name }}"
          when: >
                format_for_25 | default(false) and
                item.1.name != "Read"
          vars:
            object_type: "{{ item.1.summary_fields.resource_type | replace('_', '') }}"

        - name: ROLES - Get user roles (pre 2.5)
          ansible.builtin.set_fact:
            controller_objects_user_roles: "{{ controller_objects_user_roles | default([]) +
                                               [{'user': item.username,
                                                 'roles': lookup('ansible.controller.controller_api',
                                                                 'users/' +
                                                                    item.id | string +
                                                                    '/roles/',
                                                                 return_objects=false,
                                                                 return_all=true).results}] }}"
          when: not item.is_superuser
          loop: "{{ lookup('ansible.controller.controller_api', 'users/', return_objects=false, return_all=true).results }}"
          loop_control:
            label: " | user: {{ item.username }}"

        - name: ROLES - Build list with all controller non-org user roles (pre 2.5)
          ansible.builtin.set_fact:
            controller_objects_roles: "{{ controller_objects_roles | default([]) +
                                          [{'user': item.0.user,
                                            'role': role,
                                            'object_type': object_type,
                                            'object_name': item.1.summary_fields.resource_name} |
                                            regex_replace('\n', '')] }}"
          when: >
                not format_for_25 | default(false) and
                item.1.summary_fields.resource_type is defined and
                item.1.name != "Member" and
                role != "Organization Admin"
          loop: "{{ controller_objects_user_roles | default([]) | subelements('roles') }}"
          loop_control:
            label: " | user: {{ item.0.user }} ->
                       role: {{ item.1.name }} ->
                       {{ object_type }}: {{ item.1.summary_fields.resource_name | default('N/A') }}"
          vars:
            object_type: "{{ item.1.summary_fields.resource_type | default('N/A') | replace('_', '') }}"
            role: "{{ item.1.summary_fields.resource_type_display_name | replace(' ', '') + ' ' + item.1.name }}"

        - name: ROLES - Build list with all controller non-org user roles (pre 2.5 in 2.5 format)
          ansible.builtin.set_fact:
            controller_objects_roles: "{{ controller_objects_roles | default([]) +
                                          [{'user': item.0.user,
                                            'role': role,
                                            'object_type': object_type,
                                            'object_name': item.1.summary_fields.resource_name} |
                                            regex_replace('\n', '')] }}"
          when: >
                format_for_25 | default(false) and
                item.1.summary_fields.resource_type is defined and
                item.1.name != "Member" and
                item.1.name != "Read" and
                role != "Organization Admin"
          loop: "{{ controller_objects_user_roles | default([]) | subelements('roles') }}"
          loop_control:
            label: " | user: {{ item.0.user }} ->
                       role: {{ item.1.name }} ->
                       {{ object_type }}: {{ item.1.summary_fields.resource_name | default('N/A') }}"
          vars:
            object_type: "{{ item.1.summary_fields.resource_type | default('N/A') | replace('_', '') }}"
            role: "{{ (item.1.summary_fields.resource_type_display_name | replace(' ', '') + ' ' + item.1.name) |
                       replace('Job Template', 'JobTemplate') |
                       replace('Auditor', 'Audit') |
                       replace('Organization Approve', 'Organization Approval') |
                       replace('Execution Environment', 'ExecutionEnvironment') |
                       replace('Ad Hoc', 'Adhoc') |
                       replace('Workflow Admin', 'WorkflowJobTemplate Admin') |
                       replace('Notification Admin', 'NotificationTemplate Admin') }}"

        - name: ROLES - Build list with all controller org user roles (pre 2.5)
          ansible.builtin.set_fact:
            controller_objects_roles: "{{ controller_objects_roles | default([]) +
                                          [{'user': item.0.user,
                                            'role': role,
                                            'object_type': object_type,
                                            'object_name': item.1.summary_fields.resource_name} |
                                            regex_replace('\n', '')] }}"
          when: >
                not format_for_25 | default(false) and
                item.1.summary_fields.resource_type is defined and
                (item.1.name == "Member" or
                 role == "Organization Admin")
          loop: "{{ controller_objects_user_roles | default([]) | subelements('roles') }}"
          loop_control:
            label: " | user: {{ item.0.user }} ->
                       role: {{ item.1.name }} ->
                       {{ object_type }}: {{ item.1.summary_fields.resource_name | default('N/A') }}"
          vars:
            object_type: "{{ item.1.summary_fields.resource_type | default('N/A') | replace('_', '') }}"
            role: "{{ item.1.summary_fields.resource_type_display_name | replace(' ', '') + ' ' + item.1.name }}"

        - name: ROLES - Build list with all controller org user roles (pre 2.5 in 2.5 format)
          ansible.builtin.set_fact:
            gateway_objects_roles: "{{ gateway_objects_roles | default([]) +
                                       [{'user': item.0.user,
                                         'role': role,
                                         'object_type': object_type,
                                         'object_name': item.1.summary_fields.resource_name} |
                                         regex_replace('\n', '')] }}"
          when: >
                format_for_25 | default(false) and
                item.1.summary_fields.resource_type is defined and
                (item.1.name == "Member" or
                 role == "Organization Admin")
          loop: "{{ controller_objects_user_roles | default([]) | subelements('roles') }}"
          loop_control:
            label: " | user: {{ item.0.user }} ->
                       role: {{ item.1.name }} ->
                       {{ object_type }}: {{ item.1.summary_fields.resource_name  | default('N/A')}}"
          vars:
            object_type: "{{ item.1.summary_fields.resource_type | default('N/A') | replace('_', '') }}"
            role: "{{ item.1.summary_fields.resource_type_display_name | replace(' ', '') + ' ' + item.1.name }}"

    - name: ROLES - Audit roles (2.5)
      when: >
            controller_ping is defined and
            controller_ping.version is version_compare('4.6', '>=') | bool and
            aap_platform | default('aap') != 'awx24'
      block:
        - name: ROLES - Get controller team role assignments (2.5)
          ansible.builtin.set_fact:
            controller_team_role_assignments: "{{ lookup('ansible.controller.controller_api',
                                                         'role_team_assignments',
                                                         return_objects=false,
                                                         return_all=true).results }}"

        - name: ROLES - Build list with controller team roles (2.5)
          ansible.builtin.set_fact:
            controller_objects_roles: "{{ controller_objects_roles | default([]) +
                                          [{'team': item.summary_fields.team.name,
                                            'role': item.summary_fields.role_definition.name,
                                            'object_type': item.content_type.split('.')[1],
                                            'object_name': item.summary_fields.content_object.name} |
                                           regex_replace('\n', '')] }}"
          loop: "{{ controller_team_role_assignments }}"
          loop_control:
            label: " | team: {{ item.summary_fields.team.name }} ->
                       role: {{ item.summary_fields.role_definition.name }} ->
                       {{ item.content_type.split('.')[1] }}: {{ item.summary_fields.content_object.name }} }}"

        - name: ROLES - Get controller user role assignments
          ansible.builtin.set_fact:
            controller_user_role_assignments: "{{ lookup('ansible.controller.controller_api',
                                                         'role_user_assignments',
                                                         return_objects=false,
                                                         return_all=true).results }}"

        - name: ROLES - Build list with controller user roles (2.5)
          ansible.builtin.set_fact:
            controller_objects_roles: "{{ controller_objects_roles | default([]) +
                                          [{'user': item.summary_fields.user.username,
                                            'role': item.summary_fields.role_definition.name,
                                            'object_type': item.content_type.split('.')[1],
                                            'object_name': item.summary_fields.content_object.name} |
                                           regex_replace('\n', '')] }}"
          loop: "{{ controller_user_role_assignments }}"
          loop_control:
            label: " | user: {{ item.summary_fields.user.username }} ->
                       role: {{ item.summary_fields.role_definition.name }} ->
                       {{ (item.content_type | string).split('.')[1] | default('controller') }}:
                       {{ item.summary_fields.content_object.name | default('Controller') }}"
          when: item.content_type

        - name: ROLES - Get gateway team role assignments
          ansible.builtin.set_fact:
            gateway_team_role_assignments: "{{ lookup('ansible.platform.gateway_api',
                                                      'role_team_assignments',
                                                      return_objects=false,
                                                      host=lookup('ansible.builtin.env', 'GATEWAY_HOSTNAME'),
                                                      username=lookup('ansible.builtin.env', 'GATEWAY_USERNAME'),
                                                      password=lookup('ansible.builtin.env', 'GATEWAY_PASSWORD'),
                                                      oauth_token=lookup('ansible.builtin.env', 'GATEWAY_API_TOKEN'),
                                                      verify_ssl=lookup('ansible.builtin.env', 'GATEWAY_VERIFY_SSL')).results }}"

        - name: ROLES - Build list with gateway team roles (2.5)
          ansible.builtin.set_fact:
            gateway_objects_roles: "{{ gateway_objects_roles | default([]) +
                                       [{'team': item.summary_fields.team.name,
                                         'role': item.summary_fields.role_definition.name,
                                         'object_type': item.content_type.split('.')[1],
                                         'object_name': item.summary_fields.content_object.name} |
                                        regex_replace('\n', '')] }}"
          loop: "{{ gateway_team_role_assignments }}"
          loop_control:
            label: " | team: {{ item.summary_fields.team.name }} ->
                       role: {{ item.summary_fields.role_definition.name }} ->
                       {{ item.content_type.split('.')[1] }}: {{ item.summary_fields.content_object.name }} }}"

        - name: ROLES - Get gateway user role assignments
          ansible.builtin.set_fact:
            gateway_user_role_assignments: "{{ lookup('ansible.platform.gateway_api',
                                                      'role_user_assignments',
                                                      return_objects=false,
                                                      host=lookup('ansible.builtin.env', 'GATEWAY_HOSTNAME'),
                                                      username=lookup('ansible.builtin.env', 'GATEWAY_USERNAME'),
                                                      password=lookup('ansible.builtin.env', 'GATEWAY_PASSWORD'),
                                                      oauth_token=lookup('ansible.builtin.env', 'GATEWAY_API_TOKEN'),
                                                      verify_ssl=lookup('ansible.builtin.env', 'GATEWAY_VERIFY_SSL')).results }}"

        - name: ROLES - Build list with gateway user roles (2.5)
          ansible.builtin.set_fact:
            gateway_objects_roles: "{{ gateway_objects_roles | default([]) +
                                       [{'user': item.summary_fields.user.username,
                                         'role': item.summary_fields.role_definition.name,
                                         'object_type': ('aap.platform' if not item.content_type else item.content_type).split('.')[1],
                                         'object_name': item.summary_fields.content_object.name | default('Platform')} |
                                        regex_replace('\n', '')] }}"
          loop: "{{ gateway_user_role_assignments }}"
          loop_control:
            label: " | user: {{ item.summary_fields.user.username }} ->
                       role: {{ item.summary_fields.role_definition.name }} ->
                       {{ (item.content_type | string).split('.')[1] | default('platform') }}:
                       {{ item.summary_fields.content_object.name | default('Platform') }}"

    - name: ROLES - Show controller roles (formatted)
      ansible.builtin.debug:
        var: controller_objects_roles
      when: >
            controller_objects_roles | default('') and
            not show_vars_at_the_end | default(false)

    - name: ROLES - Show gateway roles (formatted)
      ansible.builtin.debug:
        var: gateway_objects_roles
      when: >
            gateway_objects_roles | default('') and
            not show_vars_at_the_end | default(false)
