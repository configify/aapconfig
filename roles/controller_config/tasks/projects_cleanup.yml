- name: PROJECTS - Get all projects from AAP
  ansible.builtin.set_fact:
    aap_projects: "{{ aap_projects | default([]) +
                      [{'name': item.name,
                        'org': item.summary_fields.organization.name | default(''),
                        'id': item.id}] }}"
  loop: "{{ lookup('ansible.controller.controller_api', 'projects/', return_objects=false, return_all=true).results }}"
  loop_control:
    label: " | project: {{ item.name }}"

- name: PROJECTS - Notify on rogue projects
  ansible.builtin.debug:
    msg: "Shouldn't be there"
  when: >
        not delete_objects | default(false) | bool and
        controller_objects_projects | default([]) | selectattr("name", "equalto", item.name) |
          selectattr("org", "equalto", item.org) | length == 0
  changed_when: true
  loop: "{{ aap_projects | default([]) }}"
  loop_control:
    label: " | project: {{ item.name }}"

- name: PROJECTS - Delete rogue projects
  ansible.builtin.uri:
    url: "https://{{ lookup('env','CONTROLLER_HOST') }}{{ api_endpoint }}v2/projects/{{ item.id }}/"
    method: DELETE
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ lookup('env','CONTROLLER_OAUTH_TOKEN') }}"
    validate_certs: "{{ lookup('env','CONTROLLER_VERIFY_SSL') | default(false) }}"
  when: >
        delete_objects | default(false) | bool and
        controller_objects_projects | default([]) | selectattr("name", "equalto", item.name) |
          selectattr("org", "equalto", item.org) | length == 0
  loop: "{{ aap_projects | default([]) }}"
  loop_control:
    label: " | project: {{ item.name }}"
  vars:
    api_endpoint: "{{ '/api/controller/' if not lookup('env','CONTROLLER_OPTIONAL_API_URLPATTERN_PREFIX')
                                         else lookup('env','CONTROLLER_OPTIONAL_API_URLPATTERN_PREFIX')}}"
  register: removal_result
  failed_when: "removal_result.status != 204"
  changed_when: "removal_result.status == 204"
