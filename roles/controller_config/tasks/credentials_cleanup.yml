- name: CREDENTIALS - Get all credentials from AAP
  ansible.builtin.set_fact:
    aap_credentials: "{{ aap_credentials | default([]) +
                         [{'name': item.name,
                           'org': item.summary_fields.organization.name | default(''),
                           'type': item.summary_fields.credential_type.name,
                           'id': item.id}] }}"
  loop: "{{ lookup('ansible.controller.controller_api', 'credentials/', return_objects=false, return_all=true).results }}"
  loop_control:
    label: " | credential: {{ item.name }}"
  when: >
        (limit_organizations is not defined or
         (limit_organizations is defined and
          item.summary_fields.organization.name | default('') in limit_organizations)) and
        not item.managed

- name: CREDENTIALS - Notify on rogue credentials
  ansible.builtin.debug:
    msg: "Shouldn't be there"
  when: >
        not delete_objects | default(false) | bool and
        controller_objects_credentials | selectattr("name", "equalto", item.name) |
          selectattr("type", "equalto", item.type) |
          selectattr("org", "equalto", item.org) | length == 0
  changed_when: true
  loop: "{{ aap_credentials | default([]) }}"
  loop_control:
    label: " | credential: {{ item.name }} <- org: {{ item.org }}"

- name: CREDENTIALS - Delete rogue credentials
  ansible.builtin.uri:
    url: "https://{{ lookup('env', 'CONTROLLER_HOST') }}{{ api_endpoint }}v2/credentials/{{ item.id }}/"
    method: DELETE
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ lookup('env', 'CONTROLLER_OAUTH_TOKEN') }}"
    validate_certs: "{{ lookup('env', 'CONTROLLER_VERIFY_SSL') | default(false) }}"
  when: >
        delete_objects | default(false) | bool and
        controller_objects_credentials | selectattr("name", "equalto", item.name) |
          selectattr("type", "equalto", item.type) |
          selectattr("org", "equalto", item.org) | length == 0
  loop: "{{ aap_credentials | default([]) }}"
  loop_control:
    label: " | credential: {{ item.name }} <- org: {{ item.org }}"
  vars:
    api_endpoint: "{{ '/api/controller/' if not lookup('env', 'CONTROLLER_OPTIONAL_API_URLPATTERN_PREFIX')
                                         else lookup('env', 'CONTROLLER_OPTIONAL_API_URLPATTERN_PREFIX') }}"
  register: removal_result
  failed_when: "removal_result.status != 204"
  changed_when: "removal_result.status == 204"
