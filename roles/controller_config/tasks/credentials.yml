- name: CREDENTIALS - Make sure organizations used by credentials exist
  when: limit_organizations is not defined
  block:
    - name: CREDENTIALS - Make sure organizations used by credentials exist (pre 2.5)
      ansible.controller.organization:
        name: "{{ item }}"
      loop: "{{ controller_objects_credentials | default([]) | map(attribute='org') | select() | unique }}"
      loop_control:
        label: " | organization: {{ item }}"
      when: controller_ping.version is version_compare('4.6', '<')

    - name: CREDENTIALS - Make sure organizations used by credentials exist (2.5)
      ansible.platform.organization:
        name: "{{ item }}"
      loop: "{{ controller_objects_credentials | default([]) | map(attribute='org') | select() | unique }}"
      loop_control:
        label: " | organization: {{ item }}"
      when: controller_ping.version is version_compare('4.6', '>=')

- name: CREDENTIALS - Filter credentials if org limit is specified
  ansible.builtin.set_fact:
    controller_objects_credentials: "{{ controller_objects_credentials | default([]) | selectattr('org', 'in', limit_organizations) }}"
  when: limit_organizations is defined

- name: CREDENTIALS - Create or modify credentials
  ansible.controller.credential:
    name: "{{ item.name }}"
    credential_type: "{{ item.type }}"
    organization: "{{ omit if not item.org else item.org }}"
    user: "{{ omit if item.org else 'admin' }}"
    description: "{{ item.descr }}"
    update_secrets: "{{ replace_passwords | default(false) }}"
    inputs: "{{ item.inputs | replace('HIDDEN', '') }}"
  loop: "{{ controller_objects_credentials | default([]) }}"
  loop_control:
    label: " | credential: {{ item.name }}"
  register: creds_change_result
  failed_when: >
               (not ansible_check_mode and
                creds_change_result.msg is defined) or
               (ansible_check_mode and
                creds_change_result.msg is defined and
                'expected 1' not in creds_change_result.msg)
  changed_when: >
                creds_change_result.changed or
                (ansible_check_mode and
                 creds_change_result.msg is defined and
                 'expected 1' in creds_change_result.msg)
  ignore_errors: true # noqa: ignore-errors

- name: CREDENTIALS - Create or modify credential sources
  ansible.controller.credential_input_source:
    input_field_name: "{{ item.src_input_field_name }}"
    target_credential: "{{ item.name }}"
    source_credential: "{{ item.src_credential }}"
    metadata: "{{ item.src_metadata }}"
  loop: "{{ controller_objects_credentials | default([]) }}"
  loop_control:
    label: " | target credential: {{ item.name }} <- source credential: {{ item.src_credential | default('N/A') }}"
  when: item.src_credential | default('')
